# extends用于文件内扩充，类似继承（文件外继承，使用include，需要付费版 ）
# 重试，当脚本错误的时候
.main:
  retry:
    max: 1
    when:
      - script_failure
  only:
    - /^feature.+$/
    - /^release.+$/
    - /^master.+$/
    - ci
  tags:
    - vesionbook

cache:
  key: "$CI_JOB_STAGE-$CI_COMMIT_REF_NAME"
  untracked: true

variables:
  REG: "192.168.13.25:5002"
  PROJECT: "business"
  IMAGE: "vesionbook-srs-task"
  #TAG: "$CI_BUILD_REF_NAME"
  TAG: "$CI_COMMIT_REF_NAME"
  APPHOUSE_USER: "admin"
  APPHOUSE_PASSWD: "123456"
  vesionbookRancherServerPort: "192.168.12.172:8443"
  buildingRancherServerPort: "192.168.11.50:8443"
  rancherPass: "introcks"
  rancherUser: "admin"
  rancherNamespace: "server"
  resourceUrl: "http://192.168.13.25:8000/resources"
  appName: "vesionbook-srs-task"

stages:
  - maven
  - build
  - deploy

before_script:
  - ls -lh

after_script:
  - ls -lh

job_variables:
  extends: .main
  stage: maven
  script:
    - export

job_maven:
  extends: .main
  stage: maven
  image: 192.168.13.25:5002/base/maven:3-jdk-8
  script:
    - mvn clean install package -e -U -DskipTests=true
  after_script:
    - ls -lh
    - echo "Name=${IMAGE}" > target/config/version.data
    - echo "CurrentVersion=${TAG}" >> target/config/version.data
    - echo "Branch=${CI_BUILD_REF_NAME}" >> target/config/version.data
    - echo "Author=${GITLAB_USER_NAME}" >> target/config/version.data
    - echo "Commit=${CI_COMMIT_SHA}" >> target/config/version.data
    - echo "Message=${CI_COMMIT_MESSAGE}" >> target/config/version.data
    - echo "BuildDate=`date +"%Y-%m-%d %H:%M:%S"`" >> target/config/version.data
    - cat target/config/version.data
  artifacts:
    untracked: true
    expire_in: 1 week

job_build:
  extends: .main
  stage: build
  image: 192.168.13.25:5002/base/docker:latest
  services:
    - name: 192.168.13.25:5002/base/docker:stable-dind
      command: [ "--insecure-registry=https://192.168.13.25:5002 --dns=192.168.70.100" ]
  script:
    - docker info
    - ls -lh
    - chmod -R +x *
    - docker build -t ${REG}/${PROJECT}/${IMAGE}:${TAG} .
    - docker login -u${APPHOUSE_USER} -p${APPHOUSE_PASSWD} ${REG}
    - docker push ${REG}/${PROJECT}/${IMAGE}:${TAG}
